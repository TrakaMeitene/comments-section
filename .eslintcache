[{"/Users/sandra/Projects/nodesandra copy/frontend/src/index.js":"1","/Users/sandra/Projects/nodesandra copy/frontend/src/reportWebVitals.js":"2","/Users/sandra/Projects/nodesandra copy/frontend/src/App.js":"3","/Users/sandra/Projects/nodesandra copy/frontend/src/components/comments.js":"4","/Users/sandra/Projects/nodesandra copy/frontend/src/components/modal.js":"5","/Users/sandra/Projects/nodesandra copy/frontend/src/components/commentCase.js":"6"},{"size":535,"mtime":1659641506704,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1654620640906,"results":"9","hashOfConfig":"8"},{"size":167,"mtime":1654621004526,"results":"10","hashOfConfig":"8"},{"size":3466,"mtime":1659777218797,"results":"11","hashOfConfig":"8"},{"size":1132,"mtime":1659687688997,"results":"12","hashOfConfig":"8"},{"size":7991,"mtime":1659777088635,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k74cvq",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sandra/Projects/nodesandra copy/frontend/src/index.js",[],"/Users/sandra/Projects/nodesandra copy/frontend/src/reportWebVitals.js",[],"/Users/sandra/Projects/nodesandra copy/frontend/src/App.js",[],"/Users/sandra/Projects/nodesandra copy/frontend/src/components/comments.js",["27"],"import \"./comments.css\"\nimport Modal from \"../components/modal.js\"\n\nimport { useEffect, useState, useCallback } from \"react\"\nimport CommentCase from \"./commentCase\"\nconst axios = require('axios').default;\n\nexport default function Comments() {\n\n    const [user, setUser] = useState(\"\");\n    const [comments, setComments] = useState();\n    const [newcomment, setNewcomment] = useState();\n    const [deletemode, setDelete] = useState(false);\n    const [commentid, setCommentid] = useState();\n    const [img, setImg] = useState(\"\");\n\n    useEffect(() => {\n        getAllData();\n        getUser();\n    }, [])\n\n    //get all comments from db\n    const getAllData = () => {\n        axios.get('https://nodeprojectreact.herokuapp.com')\n            .then(response => setComments(response.data))\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n    }\n\n    //get current user from db\n    const getUser = () => {\n\n        axios.get('https://nodeprojectreact.herokuapp.com/user', { params: { name: \"juliusomo\" } })\n            .then(response => setUser(response.data))\n            .then(setImg(user[0].image.png))\n            .catch((error) => {\n                console.error('Error:', error);\n            })\n    }\n\n    //add new comment to db\n    const postcomment = (e) => {\n        const content = e.target[0].value;\n        e.preventDefault();\n        const arrayofid = []\n        // eslint-disable-next-line\n       const lastitem = comments.map(comment => { arrayofid.push(comment.id)})\nconst sortedid = arrayofid.sort((a, b) => a - b)\n\n        const newcomment = {\n            id: sortedid[sortedid.length -1] + 1,\n            content: content,\n            createdAt: new Date(),\n            score: 0,\n            user: user[0],\n            replyTo: \"0\"\n        }\n\n        axios.post(\"https://nodeprojectreact.herokuapp.com/addcomment\", { newcomment })\n            .catch((error) => {\n               alert('Error:', error);\n            })\n            .then(function () {\n                setNewcomment(\"\")\n                getAllData()\n            })\n    }\n\n    const textchange = (e) => {\n        setNewcomment(e.target.value);\n        e.preventDefault();\n    }\n\n    const deletemodal = useCallback((state) => {\n        setDelete(state)\n    }, []);\n\n\n    const deletefromdb = useCallback((id) => {\n        setCommentid(id)\n    }, []);\n\n    if (comments === undefined || comments === null || user[0] === undefined || user[0] === null) {\n        return \"\"\n    }\n\n\n    return (\n        <>\n            {comments.map((comment => ((comment.replyTo === \"0\") ?\n                (<div key={comment.id} ><CommentCase comment={comment} key={comment.id} id={comment._id} getAllData={getAllData} currentuser={user} comments={comments} deletemodal={deletemodal} deletefromdb={deletefromdb} /></div>)\n                : \"\")))}\n\n            {/* input comment field */}\n            <div className=\"comment-window\">\n                <div className=\"avatar\">\n                    <img alt=\"avatar\" src={img} />\n                </div>\n                <form onSubmit={postcomment}>\n                    <textarea rows=\"3\" cols=\"10\" wrap=\"hard\" placeholder=\"Add a comment...\" onChange={textchange} value={newcomment} />\n                    <input type=\"submit\" value=\"SEND\" />\n                </form>\n\n            </div>\n\n            {deletemode ? <Modal deletemodal={deletemodal} commentid={commentid} getalldata={getAllData}/> : \"\"}\n        </>\n    )\n}","/Users/sandra/Projects/nodesandra copy/frontend/src/components/modal.js",[],"/Users/sandra/Projects/nodesandra copy/frontend/src/components/commentCase.js",[],{"ruleId":"28","severity":1,"message":"29","line":20,"column":8,"nodeType":"30","endLine":20,"endColumn":10,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [getUser]",{"range":"35","text":"36"},[600,602],"[getUser]"]