{"version":3,"sources":["components/modal.js","images/icon-plus.svg","images/icon-minus.svg","components/commentCase.js","components/comments.js","App.js","reportWebVitals.js","index.js"],"names":["axios","require","default","Modal","deletemodal","commentid","getalldata","className","onClick","delete","data","id","then","response","console","log","catch","error","CommentCase","comment","getAllData","currentuser","comments","deletefromdb","useState","replymode","setReply","user","username","replyvalue","setReplyvalue","editmode","setEditmode","editedvalue","setEditedvalue","replies","useEffect","undefined","i","length","replyTo","push","date","Date","commentDate","createdAt","years","getFullYear","months","getMonth","days","Math","abs","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","created","floor","vote","e","type","target","getAttribute","put","alert","image","png","current","edit","alt","src","process","onSubmit","preventDefault","arrayofid","sortedid","map","sort","a","b","newcomment","content","score","_id","post","rows","cols","wrap","defaultValue","onChange","value","string","namereply","split","substring","indexOf","reprep","x","plus","minus","params","commentreply","includes","Comments","setUser","setComments","setNewcomment","deletemode","setDelete","setCommentid","getUser","get","name","useCallback","state","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.dc632213.chunk.js","sourcesContent":["import React from \"react\";\nconst axios = require('axios').default;\n\nexport default function Modal({deletemodal, commentid, getalldata}) {\n\n    const cancel =()=>{\ndeletemodal(false)\n    }\n\n    const deletfrom = ()=>{\n        // eslint-disable-next-line \n        axios.delete(\"https://nodeprojectreact.herokuapp.com/delete/${commentid}\", {\n              data: {\n                  id: commentid}\n              })\n        .then(response => console.log(response.data))\n        .catch((error) => {\n            console.error('Error:', error);\n        })\n        .then(function () {\n            deletemodal(false)\n            getalldata()\n        })\n    }\n    return (\n        <div className=\"mask\">\n            <div className=\"modal\">\n                <h3>Delete comment</h3>\n                <p>Are you sure you want to delete this\n                    comment? This will remove the comment\n                    and can't be undone</p>\n\n                    <span><button className=\"cancel\" onClick={cancel}>NO,CANCEL</button><button className=\"accept\" onClick={deletfrom}>YES, DELETE</button></span>\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/icon-plus.0037a825.svg\";","export default __webpack_public_path__ + \"static/media/icon-minus.4aa6933c.svg\";","import React, { useEffect, useState } from \"react\";\nimport plus from \"../images/icon-plus.svg\"\nimport minus from \"../images/icon-minus.svg\"\nconst axios = require('axios').default;\n\nexport default function CommentCase({ comment, id, getAllData, currentuser, comments, deletemodal, deletefromdb }) {\n\n    const [replymode, setReply] = useState(false);\n    const [replyvalue, setReplyvalue] = useState(\"@\" + comment.user.username + \" \");\n    const [editmode, setEditmode] = useState(false)\n    const [editedvalue, setEditedvalue] = useState();\n\n    let replies = []\n\n    useEffect(() => {\n        if (comment === undefined || comment === null) {\n            return \"\"\n        };\n\n    }, [comment])\n\n    for(let i = 0; i < comments.length; i++){\n        if(comments[i].replyTo !== \"0\"){\n            replies.push(comments[i])\n        }\n    }\n\n    var date = new Date();\n\n    var commentDate = new Date(comment.createdAt);\n\n    const years = date.getFullYear() - commentDate.getFullYear();\n    const months = date.getMonth() - commentDate.getMonth();\n    const days = Math.abs((new Date(comment.createdAt).getDate()) - (new Date().getDate()))\n    let hours = Math.abs((new Date(comment.createdAt).getHours()) - (new Date().getHours()))\n    let minutes = date.getMinutes() - commentDate.getMinutes();\n    const seconds = date.getSeconds() - commentDate.getSeconds()\n\n    let created = \"\";\n    let week = 7\n\n    if (years > 0 && years < 2) {\n        created += years + \"year ago\"\n    } else if (years >= 2) {\n        created = years + \" years ago\"\n    } else if (months > 0 && months > 1) {\n        created = months + \" months ago\"\n    } else if (months === 1) {\n        created = months + \" month ago\"\n    } else if (days > 0 && days > 1 && Math.floor(days) < 7) {\n        created = Math.floor(days) + \" days ago\"\n    } else if (Math.floor(days) === 1) {\n        created = days + \" day ago\"\n    } else if (Math.floor(days / week) === 1) {\n        created = \"1 week ago\"\n    } else if (Math.floor(days / week) > 1) {\n        created = Math.floor(days / week) + \" weeks ago\"\n    } else if (minutes > 0 && hours === 1) {\n        created = \"1 hour ago\"\n    } else if (hours > 1 && hours < 12) {\n        created = hours + \" hours ago\"\n    } else if (hours === 1 && minutes < 0) {\n        minutes = (date.getMinutes() + 60) - commentDate.getMinutes()\n        created = minutes + \" minutes ago\"\n    } else if (minutes > 0 && minutes > 1) {\n        created = minutes + \" minutes ago\"\n    } else if (minutes === 1) {\n        created = minutes + \" minute ago\"\n    } else if (seconds > 0 && seconds > 1) {\n        created = seconds + \" seconds ago\"\n    } else if (seconds === 1) {\n        created = seconds + \" second ago\"\n    } else if (seconds === 0) {\n        created = \"just now\"\n    }\n\n    const vote = (e) => {\n        const type = e.target.getAttribute('value')\n\n        axios.put('https://nodeprojectreact.herokuapp.com/score', {\n            id: id,\n            comment: comment,\n            type: type\n        })\n            .catch(function (error) {\n                alert(error);\n            })\n            .then(function () {\n                getAllData();\n            });\n    }\n\n    const replycomment = (e) => {\n        setReply(true)\n    }\n\n    const onreplychange = (e) => {\n        setReplyvalue(e.target.value)\n        e.preventDefault()\n    }\n\n    //add new reply\n    const replytocomment = (e) => {\n        e.preventDefault();\n        const arrayofid = []\n        // eslint-disable-next-line\n        const lastitem = comments.map(comment => { arrayofid.push(comment.id) })\n        const sortedid = arrayofid.sort((a, b) => a - b)\n\n        const newcomment = {\n            id: sortedid[sortedid.length - 1] + 1,\n            content: (replyvalue === undefined) ? \"\" : replyvalue,\n            createdAt: new Date(),\n            score: 0,\n            user: currentuser[0],\n            replyTo: comment._id,\n            type: \"reply\"\n        }\n\n        axios.post(\"https://nodeprojectreact.herokuapp.com/addcomment\", { newcomment })\n            .catch((error) => {\n                alert('Error:', error);\n            })\n            .then(function () {\n                setReply(false)\n                setReplyvalue(\"\")\n                getAllData()\n            })\n    }\n\n    const editcomment = () => {\n        setEditmode(true)\n    }\n\n    const changecomment = (e) => {\n        e.preventDefault();\n        setEditedvalue(e.target.value)\n    }\n//edit comment\n    const putcomment = (e) => {\n        e.preventDefault();\n\n        const params = {\n            _id: id,\n            id: comment.id,\n            content: editedvalue,\n            createdAt: comment.createdAt,\n            score: comment.score,\n            user: comment.user,\n            replyTo: comment.replyTo\n        }\n\n        axios.put('https://nodeprojectreact.herokuapp.com/edit', { params })\n            .catch(function (error) {\n                alert(error);\n            })\n            .then(function () {\n                getAllData();\n                setEditmode(false)\n            });\n    }\n\n\n    const todelete = () => {\n        deletemodal(true);\n        deletefromdb(id);\n    }\n\n    const image = comment.user.image.png;\n    const current = currentuser[0].username\n\n    var edit = (<div className=\"comment-window\">\n        <div className=\"avatar\">\n            <img alt=\"avatar\" src={`${process.env.PUBLIC_URL}/${currentuser[0].image.png}`} />\n        </div>\n        <form onSubmit={replytocomment}>\n            <textarea rows=\"3\" cols=\"12\" wrap=\"hard\" defaultValue={\"@\" + comment.user.username + \" \"} onChange={onreplychange} />\n            <input type=\"submit\" value=\"REPLY\" />\n        </form>\n\n    </div>\n    )\n    const string = comment.content\n    const namereply = string.split(\" \")\n\n    const content = ((string.split('')[0] === \"@\") ? <p><b>{namereply[0] + \" \"}</b>{string.substring(string.indexOf(' ') + 1)}</p> : <p>{comment.content}</p>) // bold the assignment of comment author\n    \n    let reprep = [] //replies of relply comments\n    for (let i = 0; i < replies.length; i++) {\n        for(let x= i+1; x<comments.length; x++){\n            if(replies[i]._id === comments[x].replyTo){\n            reprep.push(comments[x])\n            }\n        }\n    }\n\n    return (\n        <>\n            <div className=\"comment-window\">\n                <div className=\"vote-count\">\n                  <img alt='plus' src={plus}  onClick={vote} value={\"plus\"} />\n                    <p>{comment.score}</p>\n                    <img alt=\"minus\" src={minus} onClick={vote} value={\"minus\"} />\n                </div>\n                <div className=\"comment-column\">\n                    <div className=\"comment-header\">\n                        <img alt=\"avatar\" src={image} />\n                        <p>{comment.user.username}</p><span className={comment.user.username === current ? \"you\" : \"nodisplay\"}>you</span>\n                        <p className=\"cooment-date\">{created}</p>\n                        {comment.user.username === current ? <div className=\"delete\"><p onClick={todelete}>Delete</p><p onClick={editcomment} >Edit</p></div> : <p className=\"reply\" onClick={replycomment}> Reply</p>}\n                    </div>\n                    <div className=\"content\">\n                        {editmode ? <form className=\"update\" onSubmit={putcomment}><textarea className=\"editable\" rows=\"2\" cols=\"10\" wrap=\"hard\" onChange={changecomment} defaultValue={comment.content} /><input type=\"submit\" value=\"UPDATE\" /></form> : content}\n                    </div>\n                </div>\n\n            </div>\n            {replymode ? edit : \"\"}\n\n            {replies.map((commentreply => (comment._id === commentreply.replyTo)?\n                (<div key={commentreply.id} className={reprep.includes(commentreply) ? \"jauna\" : \"repliedTo\"}><CommentCase comment={commentreply} key={commentreply.id} id={commentreply._id} getAllData={getAllData} currentuser={currentuser} comments={comments} deletemodal={deletemodal} deletefromdb={deletefromdb}/></div>)\n                : \"\"))} \n        </>\n    )\n}","import \"./comments.css\"\nimport Modal from \"../components/modal.js\"\n\nimport { useEffect, useState, useCallback } from \"react\"\nimport CommentCase from \"./commentCase\"\nconst axios = require('axios').default;\n\nexport default function Comments() {\n\n    const [user, setUser] = useState(\"\");\n    const [comments, setComments] = useState();\n    const [newcomment, setNewcomment] = useState();\n    const [deletemode, setDelete] = useState(false);\n    const [commentid, setCommentid] = useState();\n\n    useEffect(() => {\n        getAllData();\n        getUser();\n    }, [])\n\n    //get all comments from db\n    const getAllData = () => {\n        axios.get('https://nodeprojectreact.herokuapp.com')\n            .then(response => setComments(response.data))\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n\n    }\n\n    //get current user from db\n    const getUser = () => {\n\n        axios.get('https://nodeprojectreact.herokuapp.com/user', { params: { name: \"juliusomo\" } })\n            .then(response => setUser(response.data))\n            .catch((error) => {\n                console.error('Error:', error);\n            })\n    }\n\n    //add new comment to db\n    const postcomment = (e) => {\n        const content = e.target[0].value;\n        e.preventDefault();\n        const arrayofid = []\n        // eslint-disable-next-line\n       const lastitem = comments.map(comment => { arrayofid.push(comment.id)})\nconst sortedid = arrayofid.sort((a, b) => a - b)\n\n        const newcomment = {\n            id: sortedid[sortedid.length -1] + 1,\n            content: content,\n            createdAt: new Date(),\n            score: 0,\n            user: user[0],\n            replyTo: \"0\"\n        }\n\n        axios.post(\"https://nodeprojectreact.herokuapp.com/addcomment\", { newcomment })\n            .catch((error) => {\n               alert('Error:', error);\n            })\n            .then(function () {\n                setNewcomment(\"\")\n                getAllData()\n            })\n    }\n\n    const textchange = (e) => {\n        setNewcomment(e.target.value);\n        e.preventDefault();\n    }\n\n    const deletemodal = useCallback((state) => {\n        setDelete(state)\n    }, []);\n\n\n    const deletefromdb = useCallback((id) => {\n        setCommentid(id)\n    }, []);\n\n    if (comments === undefined || comments === null || user[0] === undefined || user[0] === null) {\n        return \"\"\n    }\n\n    return (\n        <>\n            {comments.map((comment => ((comment.replyTo === \"0\") ?\n                (<div key={comment.id} ><CommentCase comment={comment} key={comment.id} id={comment._id} getAllData={getAllData} currentuser={user} comments={comments} deletemodal={deletemodal} deletefromdb={deletefromdb} /></div>)\n                : \"\")))}\n\n            {/* input comment field */}\n            <div className=\"comment-window\">\n                <div className=\"avatar\">\n                    <img alt=\"avatar\" src={`${process.env.PUBLIC_URL}/${user[0].image.png}`} />\n                </div>\n                <form onSubmit={postcomment}>\n                    <textarea rows=\"3\" cols=\"10\" wrap=\"hard\" placeholder=\"Add a comment...\" onChange={textchange} value={newcomment} />\n                    <input type=\"submit\" value=\"SEND\" />\n                </form>\n\n            </div>\n\n            {deletemode ? <Modal deletemodal={deletemodal} commentid={commentid} getalldata={getAllData}/> : \"\"}\n        </>\n    )\n}","import React from 'react'\r\nimport Comment from './components/comments'\r\nimport './custom.css'\r\n\r\nexport default function App() {\r\n\r\n  return (\r\n    <Comment />\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}